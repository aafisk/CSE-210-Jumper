class Dictionary {

    private List<string> words = new List<string>() { 
        "sunday", 
        "stitch", 
        "screen", 
        "indoor", 
        "medium", 
        "pile", 
        "retire", 
        "standard", 
        "metal", 
        "style", 
        "cunning", 
        "cream", 
        "elbow", 
        "stick", 
        "occupy", 
        "pop", 
        "recycle", 
        "number", 
        "dress", 
        "conception", 
        "site", 
        "will", 
        "polite", 
        "progress", 
        "pool", 
        "fossil", 
        "bomber", 
        "sample", 
        "mastermind", 
        "intelligence", 
        "election", 
        "dirty", 
        "lodge", 
        "please", 
        "upset", 
        "graduate", 
        "garage", 
        "bare", 
        "administration", 
        "sigh", 
        "entertainment", 
        "permission", 
        "hay", 
        "intermediate", 
        "am", 
        "hip", 
        "wriggle", 
        "notorious", 
        "voice", 
        "pie",
        "margin",
        "hit",
        "yearn",
        "viable",
        "pawn",
        "valley",
        "horn",
        "fruit",
        "assault",
        "endure",
        "favour",
        "live",
        "baseball",
        "symptom",
        "red",
        "include",
        "smile",
        "chop",
        "mathematics",
        "obese",
        "mourning",
        "flavor",
        "reinforce",
        "build",
        "anxiety",
        "care",
        "stool",
        "treaty",
        "see",
        "pull",
        "promotion",
        "bless",
        "garage",
        "door",
        "manual",
        "visual",
        "deficiency",
        "profit",
        "dump",
        "pot",
        "carry",
        "bloodshed",
        "blow",
        "salvation",
        "slide",
        "strategic",
        "reason",
        "sensitive",
        "barrel",
        "ax"}; 

    private Random rnd = new Random();

    public Dictionary() {
    }

    public string GetRandomWord() {
        return words[rnd.Next(0, words.Count - 1)];
    }
}